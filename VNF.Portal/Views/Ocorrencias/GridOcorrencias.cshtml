@using MetsoFramework.Utils
@model List<VNF.Portal.ViewsModel.OcorrenciasListagemViewModel>
<!-- Widget ID (each widget will need unique ID)-->

<div class="jarviswidget jarviswidget-color-blueDark" data-widget-editbutton="false">
    <header class="navigation-wrap">
        <div class="col-md-10 col-xs-12">
            <div class="btn-group margin-top-5 left">
                <a class="btn btn-default" onclick="Exportar();" data-toggle="modal"><i class="fa fa-file-excel-o"></i><span class="text-btn"> Exportar</span></a>
            </div>
        </div>
        <div class="col-md-2 col-xs-12">
            <div class="btn-group btn-group-justified margin-top-5 right">
                <a class="btn btn-primary" data-toggle="modal" data-target="#divOcorrencia" onclick="GetOcorrencia();"><i class="fa fa-search"></i><span class="text-btn"> Detalhes</span></a>
            </div>
        </div>
    </header>

    <div id="divData">
        <div class="widget-body no-padding">
            <table id="dttTabela" class="table table-striped table-bordered table-hover" width="100%">
                <thead>
                    <tr>
                        <th width="13%">Data</th>
                        <th width="7%">Documento</th>
                        <th width="31%">Fornecedor</th>
                        <th width="12%">Responsável</th>
                        <th>Comentário</th>
                        <th width="10%">Status</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model != null)
                    {
                        foreach (VNF.Portal.ViewsModel.OcorrenciasListagemViewModel i in Model)
                        {
                            string cor = "";
                            if (i.Status.ToUpper() == "FINALIZADO")
                            {
                                cor = "txt-color-blueLight";
                            }
                            else if (i.Status.ToUpper() == "RETORNADO")
                            {
                                cor = "txt-color-blue";
                            }
                            else if (i.Status.ToUpper() == "PENDENTE")
                            {
                                cor = "txt-color-red";
                            }

                            //string responsavel = i.Comprador.Split(' ').Count() > 2 ? i.Comprador.Split(' ')[0] + " " + i.Comprador.Split(' ')[i.Comprador.Split(' ').Count() - 1] : i.Comprador;

                            <tr id='row_@i.IdOcorrencia' onclick='selectRow(@i.IdOcorrencia, "@i.NFEID", "@i.TipoDocumento")' class="@cor">
                                <td>@Convert.ToDateTime(i.Data).ToString("dd/MM/yyyy HH:mm")</td>
                                <td>@i.NumeroDocumento</td>
                                <td>@i.CodigoFornecedor.LimitText(35)</td>
                                <td>@i.Comprador</td>
                                <td>@i.Motivo</td>
                                <td>@i.Status</td>
                            </tr>
                        }
                    }
                </tbody>
            </table>

            <script type="text/javascript">
                /* BASIC ;*/
                var responsiveHelper_dt_basic1 = undefined;


                var breakpointDefinition = {
                    tablet: 1024,
                    phone: 480
                };

                $('#dttTabela').dataTable({
                    "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-12 hidden-xs'l>r>" +
                        "t" +
                        "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
                    "autoWidth": false,
                    "preDrawCallback": function () {
                        // Initialize the responsive datatables helper once.
                        if (!responsiveHelper_dt_basic1) {
                            responsiveHelper_dt_basic1 = new ResponsiveDatatablesHelper($('#dttTabela'), breakpointDefinition);
                        }
                    },
                    "rowCallback": function (nRow) {
                        responsiveHelper_dt_basic1.createExpandIcon(nRow);
                    },
                    "drawCallback": function (oSettings) {
                        responsiveHelper_dt_basic1.respond();
                    },
                    "oLanguage": {
                        "sLengthMenu": "Exibe _MENU_ registros por página",
                        "sZeroRecords": "Nenhum registro encontrado",
                        "sInfo": "Exibindo de _START_ a _END_ de _TOTAL_ registros",
                        "sInfoEmpty": "Exibindo de 0 a 0 de 0 registros",
                        "sInfoFiltered": "(filtrados de _MAX_ registros totais)"
                    }
                });
            </script>

        </div>
    </div>
</div>