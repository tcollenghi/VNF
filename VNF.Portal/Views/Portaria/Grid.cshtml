@model VNF.Portal.Models.PortariaModel

<div class="widget-body no-padding">
    <table id="dttTabela" datatables_fixedheader="top" datatables_fixedheader_offsettop="60" class="table table-striped table-bordered table-hover table-click" width="100%">
        <thead>
            <tr>
                <th></th>
                <th>Data</th>
                <th>Pasta</th>
                <th>Chegada</th>
                <th>Entrada</th>
                <th>Placa</th>
                <th>Transportadora</th>
                <th>Motorista</th>
                <th>Setor</th>
                <th>Situação</th>
                <th>Qtde NF</th>
            </tr>
        </thead>
        <tbody>
            @{
                string rowId = "row";
                string rowClass = "";
            }

            @if (Model.dtEquipamentos.Rows.Count > 0) {  
                foreach (System.Data.DataRow item in Model.dtEquipamentos.Rows)
                {
                    rowId = "row" + item["IDPASTA"].ToString();
                    rowClass = item["SITUACAO"].ToString() == "NÃO AUTORIZADA" ? "txt-color-red" : "";
                    
                    <tr id='@rowId' class="@rowClass" onclick="selectRow('@item["IDPASTA"]','@item["HORENT"]' );">
                        @if (item["PRIORIDADE_ALTA"].ToString() == "SIM")
                        {
                            <td class="center"><h5 class="padding0 margin0 line-height0" title="Prioridade alta"><i class="fa fa-arrow-circle-up txt-color-red"></i></h5></td>
                        }
                        else
                        {
                            <td class="center"><h5 class="padding0 margin0 line-height0" title="Prioridade normal"><i class="fa fa-arrow-circle-down txt-color-green"></i></h5></td>
                        }
                        <td>@Html.Encode(!string.IsNullOrEmpty(item["DATLAN"].ToString()) ? Convert.ToDateTime(item["DATLAN"]).ToShortDateString() : "")</td>
                        <td>@item["IDPASTA"]</td>
                        <td>@Html.Encode(!string.IsNullOrEmpty(item["HORCHE"].ToString()) ? Convert.ToDateTime(item["HORCHE"]).ToString("HH:mm") : "")</td>
                        <td>@Html.Encode(!string.IsNullOrEmpty(item["HORENT"].ToString()) ? Convert.ToDateTime(item["HORENT"]).ToString("HH:mm") : "")</td>
                        <td>@item["PLACA"]</td>
                        <td>@item["NOMTRA"]</td>
                        <td>@item["NOMMOT"]</td>
                        <td>@item["SETOR"]</td>
                        <td>@item["SITUACAO"]</td>
                        <td>@item["QTD_NOTAS"]</td>
                    </tr>
                }
            }
        </tbody>
    </table>
</div>


<script type="text/javascript">
    /* BASIC ;*/
    var responsiveHelper_dt_basic = undefined;
    var responsiveHelper_datatable_fixed_column = undefined;
    var responsiveHelper_datatable_col_reorder = undefined;
    var responsiveHelper_datatable_tabletools = undefined;

    var breakpointDefinition = {
        tablet: 1024,
        phone: 480
    };
    /* COLUMN SHOW - HIDE */
    $('#dttTabela').dataTable({
        "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-12 hidden-xs'l>r>" +
                     "t" +
                     "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
        "autoWidth": true,
        "preDrawCallback": function () {
            // Initialize the responsive datatables helper once.
            if (!responsiveHelper_dt_basic) {
                responsiveHelper_dt_basic = new ResponsiveDatatablesHelper($('#dttTabela'), breakpointDefinition);
            }
        },
        "rowCallback": function (nRow) {
            responsiveHelper_dt_basic.createExpandIcon(nRow);
        },
        "drawCallback": function (oSettings) {
            responsiveHelper_dt_basic.respond();
        }
    });

    /* END COLUMN SHOW - HIDE */
</script>