@model System.Data.DataTable
<!-- NEW COL START -->
<article class="col-sm-12 col-md-12 col-lg-12">
    <!-- Widget ID (each widget will need unique ID)-->
    <div class="jarviswidget jarviswidget-color-blueDark" data-widget-editbutton="false">

        <header class="navigation-wrap">
            <div class="col-md-10 col-xs-12">
                <div class="btn-group margin-top-5 left">
                    <a class="btn btn-default" onclick="Exportar();" data-toggle="modal"><i class="fa fa-file-excel-o"></i><span class="text-btn"> Exportar</span></a>
                </div>
            </div>
            <div class="col-md-2 col-xs-12">
                <div class="btn-group btn-group-justified margin-top-5 right">
                    <a class="btn btn-primary" data-toggle="modal" data-target="#modalNovaPasta">
                        <i class="fa fa-plus-circle"></i>
                        Incluir
                    </a>
                </div>
            </div>
        </header>


        <div id="divData">
            <!-- end widget edit box -->
            <!-- widget content -->
            <div class="widget-body no-padding">
                <table id="dttTabela" datatables_fixedheader="top" datatables_fixedheader_offsettop="60" class="table table-striped table-bordered table-hover table-click" width="100%">
                    <thead>
                        <tr>
                            <th style="width:20%">Pedido</th>
                            <th style="width:10%">Item</th>
                            <th style="width:20%">Data inserção</th>
                            <th style="width:20%">Data limite</th>
                            <th style="width:15%">Recebido</th>
                            <th style="width:15%">Recebido em</th>
                        </tr>
                    </thead>
                    <tbody>
                        @{
                            if (Model != null)
                            {
                                string pid_recebido_em = "";
                                for (int i = 0; i < Model.Rows.Count; i++)
                                {
                                    if (Model.Rows[i]["pid_recebido_em"] == DBNull.Value)
                                    {
                                        pid_recebido_em = " - ";
                                    }
                                    else
                                    {
                                        pid_recebido_em = Convert.ToDateTime(Model.Rows[i]["pid_recebido_em"]).ToString("dd/MM/yyyy");
                                    }


                                    <tr id='@Model.Rows[i]["pid_pedido"].ToString()'>
                                        <td>@Model.Rows[i]["pid_pedido"].ToString()</td>
                                        <td>@Model.Rows[i]["pid_item"].ToString()</td>
                                        <td>@Convert.ToDateTime(Model.Rows[i]["pid_data_insercao"]).ToString("dd/MM/yyyy")</td>
                                        <td>@Convert.ToDateTime(Model.Rows[i]["pid_data_limite"]).ToString("dd/MM/yyyy")</td>
                                        <td>@Model.Rows[i]["pid_recebido"].ToString()</td>
                                        <td>@pid_recebido_em</td>
                                    </tr>
                                }
                            }
                        }
                    </tbody>
                    <tfoot class="hide">
                    </tfoot>
                </table>
                <script type="text/javascript">
                    /* BASIC ;*/
                    var responsiveHelper_dt_basic = undefined;
                    var responsiveHelper_datatable_fixed_column = undefined;
                    var responsiveHelper_datatable_col_reorder = undefined;
                    var responsiveHelper_datatable_tabletools = undefined;

                    var breakpointDefinition = {
                        tablet: 1024,
                        phone: 480
                    };
                    ///* COLUMN SHOW - HIDE */
                    $('#dttTabela').dataTable({
                        "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-12 hidden-xs'l>r>" +
                                         "t" +
                                         "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
                        "autoWidth": true,
                        "preDrawCallback": function () {
                            // Initialize the responsive datatables helper once.
                            if (!responsiveHelper_dt_basic) {
                                responsiveHelper_dt_basic = new ResponsiveDatatablesHelper($('#dttTabela'), breakpointDefinition);
                            }
                        },
                        "rowCallback": function (nRow) {
                            responsiveHelper_dt_basic.createExpandIcon(nRow);
                        },
                        "drawCallback": function (oSettings) {
                            responsiveHelper_dt_basic.respond();
                        }
                    });

                    ///* END COLUMN SHOW - HIDE */
                </script>
            </div>
            <!-- end widget content -->

        </div>

    </div>
    <!-- end widget div -->
    <!-- end widget -->

</article>
<!-- END COL -->